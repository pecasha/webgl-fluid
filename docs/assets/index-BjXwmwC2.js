!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const n of e)if("childList"===n.type)for(const e of n.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}(),function(e,t){const n=e;de();let r=!1,i=null;function o(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}t={IMMEDIATE:!0,TRIGGER:"hover",AUTO:!1,INTERVAL:3e3,SIM_RESOLUTION:128,DYE_RESOLUTION:1024,CAPTURE_RESOLUTION:512,DENSITY_DISSIPATION:1,VELOCITY_DISSIPATION:.2,PRESSURE:.8,PRESSURE_ITERATIONS:20,CURL:30,SPLAT_RADIUS:.25,SPLAT_FORCE:6e3,SPLAT_COUNT:Number.parseInt(20*Math.random(),10)+5,SHADING:!0,COLOR_UPDATE_SPEED:10,PAUSED:!1,BACK_COLOR:{r:0,g:0,b:0},TRANSPARENT:!1,BLOOM:!0,BLOOM_ITERATIONS:8,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.6,BLOOM_SOFT_KNEE:.7,SUNRAYS:!0,SUNRAYS_RESOLUTION:196,SUNRAYS_WEIGHT:1,...t};const u=[],a=[],c=[];u.push(new o);const{gl:f,ext:l}=function(e){const t={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1};let n=e.getContext("webgl2",t);const r=!!n;let i,o;r||(n=e.getContext("webgl",t)||e.getContext("experimental-webgl",t)),r?(n.getExtension("EXT_color_buffer_float"),o=n.getExtension("OES_texture_float_linear")):(i=n.getExtension("OES_texture_half_float"),o=n.getExtension("OES_texture_half_float_linear")),n.clearColor(0,0,0,1);const u=r?n.HALF_FLOAT:i.HALF_FLOAT_OES;let a,c,f;return r?(a=v(n,n.RGBA16F,n.RGBA,u),c=v(n,n.RG16F,n.RG,u),f=v(n,n.R16F,n.RED,u)):(a=v(n,n.RGBA,n.RGBA,u),c=v(n,n.RGBA,n.RGBA,u),f=v(n,n.RGBA,n.RGBA,u)),{gl:n,ext:{formatRGBA:a,formatRG:c,formatR:f,halfFloatTexType:u,supportLinearFiltering:o}}}(n);function v(e,t,n,r){if(!function(e,t,n,r){const i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,t,4,4,0,n,r,null);const o=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0),e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE}(e,t,n,r))switch(t){case e.R16F:return v(e,e.RG16F,e.RG,r);case e.RG16F:return v(e,e.RGBA16F,e.RGBA,r);default:return null}return{internalFormat:t,format:n}}/Mobi|Android/i.test(navigator.userAgent)&&(t.DYE_RESOLUTION=512),l.supportLinearFiltering||(t.DYE_RESOLUTION=512,t.SHADING=!1,t.BLOOM=!1,t.SUNRAYS=!1);class m{constructor(e,t){this.uniforms={},this.program=s(e,t),this.uniforms=T(this.program)}bind(){f.useProgram(this.program)}}function s(e,t){const n=f.createProgram();if(f.attachShader(n,e),f.attachShader(n,t),f.linkProgram(n),!f.getProgramParameter(n,f.LINK_STATUS))throw f.getProgramInfoLog(n);return n}function T(e){const t=[],n=f.getProgramParameter(e,f.ACTIVE_UNIFORMS);for(let r=0;r<n;r++){const n=f.getActiveUniform(e,r).name;t[n]=f.getUniformLocation(e,n)}return t}function h(e,t,n){t=function(e,t){if(!t)return e;let n="";return t.forEach((e=>{n+=`#define ${e}\n`})),n+e}(t,n);const r=f.createShader(e);if(f.shaderSource(r,t),f.compileShader(r),!f.getShaderParameter(r,f.COMPILE_STATUS))throw f.getShaderInfoLog(r);return r}const d=h(f.VERTEX_SHADER,"\n    precision highp float;\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),E=h(f.VERTEX_SHADER,"\n    precision highp float;\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform vec2 texelSize;\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        float offset = 1.33333333;\n        vL = vUv - texelSize * offset;\n        vR = vUv + texelSize * offset;\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),R=h(f.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform sampler2D uTexture;\n    void main () {\n        vec4 sum = texture2D(uTexture, vUv) * 0.29411764;\n        sum += texture2D(uTexture, vL) * 0.35294117;\n        sum += texture2D(uTexture, vR) * 0.35294117;\n        gl_FragColor = sum;\n    }\n"),x=h(f.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    void main () {\n        gl_FragColor = texture2D(uTexture, vUv);\n    }\n"),g=h(f.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),S=h(f.FRAGMENT_SHADER,"\n    precision mediump float;\n    uniform vec4 color;\n    void main () {\n        gl_FragColor = color;\n    }\n"),p=h(f.FRAGMENT_SHADER,t.TRANSPARENT?"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float aspectRatio;\n    #define SCALE 25.0\n    void main () {\n        vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n        float v = mod(uv.x + uv.y, 2.0);\n        v = v * 0.1 + 0.8;\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    }\n":"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float aspectRatio;\n    #define SCALE 25.0\n    void main () {\n        vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n        float v = mod(uv.x + uv.y, 2.0);\n        v = v * 0.1 + 0.8;\n        gl_FragColor = vec4(vec3(v), 1.0);\n    }\n"),D=h(f.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n"),A=h(f.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n"),_=h(f.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n"),L=h(f.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    void main () {\n        vec4 c = texture2D(uTexture, vUv);\n        float br = max(c.r, max(c.g, c.b));\n        c.a = 1.0 - min(max(br * 20.0, 0.0), 0.8);\n        gl_FragColor = c;\n    }\n"),U=h(f.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float weight;\n    #define ITERATIONS 16\n    void main () {\n        float Density = 0.3;\n        float Decay = 0.95;\n        float Exposure = 0.7;\n        vec2 coord = vUv;\n        vec2 dir = vUv - 0.5;\n        dir *= 1.0 / float(ITERATIONS) * Density;\n        float illuminationDecay = 1.0;\n        float color = texture2D(uTexture, vUv).a;\n        for (int i = 0; i < ITERATIONS; i++)\n        {\n            coord -= dir;\n            float col = texture2D(uTexture, coord).a;\n            color += col * illuminationDecay * weight;\n            illuminationDecay *= Decay;\n        }\n        gl_FragColor = vec4(color * Exposure, 0.0, 0.0, 1.0);\n    }\n"),O=h(f.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),y=h(f.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n    void main () {\n    #ifdef MANUAL_FILTERING\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        vec4 result = bilerp(uSource, coord, dyeTexelSize);\n    #else\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        vec4 result = texture2D(uSource, coord);\n    #endif\n        float decay = 1.0 + dissipation * dt;\n        gl_FragColor = result / decay;\n    }",l.supportLinearFiltering?null:["MANUAL_FILTERING"]),N=h(f.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),I=h(f.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n"),b=h(f.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n        vec2 vel = texture2D(uVelocity, vUv).xy;\n        gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n    }\n"),w=h(f.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),F=h(f.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),B=(f.bindBuffer(f.ARRAY_BUFFER,f.createBuffer()),f.bufferData(f.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),f.STATIC_DRAW),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,f.createBuffer()),f.bufferData(f.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),f.STATIC_DRAW),f.vertexAttribPointer(0,2,f.FLOAT,!1,0,0),f.enableVertexAttribArray(0),e=>{f.bindFramebuffer(f.FRAMEBUFFER,e),f.drawElements(f.TRIANGLES,6,f.UNSIGNED_SHORT,0)});let P,M,C,G,X,z,Y,H;const V=function(){const e=f.createTexture();f.bindTexture(f.TEXTURE_2D,e),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MIN_FILTER,f.LINEAR),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MAG_FILTER,f.LINEAR),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_S,f.REPEAT),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_T,f.REPEAT),f.texImage2D(f.TEXTURE_2D,0,f.RGB,1,1,0,f.RGB,f.UNSIGNED_BYTE,new Uint8Array([255,255,255]));const t={texture:e,width:1,height:1,attach:t=>(f.activeTexture(f.TEXTURE0+t),f.bindTexture(f.TEXTURE_2D,e),t)},n=new Image;return n.onload=()=>{t.width=n.width,t.height=n.height,f.bindTexture(f.TEXTURE_2D,e),f.texImage2D(f.TEXTURE_2D,0,f.RGB,f.RGB,f.UNSIGNED_BYTE,n)},t}(),W=new m(E,R),k=new m(d,x),K=new m(d,g),q=new m(d,S),$=new m(d,p),j=new m(d,D),J=new m(d,A),Q=new m(d,_),Z=new m(d,L),ee=new m(d,U),te=new m(d,O),ne=new m(d,y),re=new m(d,N),ie=new m(d,I),oe=new m(d,b),ue=new m(d,w),ae=new m(d,F),ce=new class{constructor(e,t){this.vertexShader=e,this.fragmentShaderSource=t,this.programs=[],this.activeProgram=null,this.uniforms=[]}setKeywords(e){let t=0;for(let r=0;r<e.length;r++)t+=_e(e[r]);let n=this.programs[t];if(!n){const r=h(f.FRAGMENT_SHADER,this.fragmentShaderSource,e);n=s(this.vertexShader,r),this.programs[t]=n}n!==this.activeProgram&&(this.uniforms=T(n),this.activeProgram=n)}bind(){f.useProgram(this.activeProgram)}}(d,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uSunrays;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n    vec3 linearToGamma (vec3 color) {\n        color = max(color, vec3(0));\n        return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n    }\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n    #ifdef SHADING\n        vec3 lc = texture2D(uTexture, vL).rgb;\n        vec3 rc = texture2D(uTexture, vR).rgb;\n        vec3 tc = texture2D(uTexture, vT).rgb;\n        vec3 bc = texture2D(uTexture, vB).rgb;\n        float dx = length(rc) - length(lc);\n        float dy = length(tc) - length(bc);\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        c *= diffuse;\n    #endif\n    #ifdef BLOOM\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n    #endif\n    #ifdef SUNRAYS\n        float sunrays = texture2D(uSunrays, vUv).r;\n        c *= sunrays;\n    #ifdef BLOOM\n        bloom *= sunrays;\n    #endif\n    #endif\n    #ifdef BLOOM\n        float noise = texture2D(uDithering, vUv * ditherScale).r;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 255.0;\n        bloom = linearToGamma(bloom);\n        c += bloom;\n    #endif\n        float a = max(c.r, max(c.g, c.b));\n        gl_FragColor = vec4(c, a);\n    }\n");function fe(){const e=De(t.SIM_RESOLUTION),n=De(t.DYE_RESOLUTION),r=l.halfFloatTexType,i=l.formatRGBA,o=l.formatRG,u=l.formatR,a=l.supportLinearFiltering?f.LINEAR:f.NEAREST;P=P?me(P,n.width,n.height,i.internalFormat,i.format,r,a):ve(n.width,n.height,i.internalFormat,i.format,r,a),M=M?me(M,e.width,e.height,o.internalFormat,o.format,r,a):ve(e.width,e.height,o.internalFormat,o.format,r,a),C=le(e.width,e.height,u.internalFormat,u.format,r,f.NEAREST),G=le(e.width,e.height,u.internalFormat,u.format,r,f.NEAREST),X=ve(e.width,e.height,u.internalFormat,u.format,r,f.NEAREST),function(){const e=De(t.BLOOM_RESOLUTION),n=l.halfFloatTexType,r=l.formatRGBA,i=l.supportLinearFiltering?f.LINEAR:f.NEAREST;z=le(e.width,e.height,r.internalFormat,r.format,n,i),c.length=0;for(let o=0;o<t.BLOOM_ITERATIONS;o++){const t=e.width>>o+1,u=e.height>>o+1;if(t<2||u<2)break;const a=le(t,u,r.internalFormat,r.format,n,i);c.push(a)}}(),function(){const e=De(t.SUNRAYS_RESOLUTION),n=l.halfFloatTexType,r=l.formatR,i=l.supportLinearFiltering?f.LINEAR:f.NEAREST;Y=le(e.width,e.height,r.internalFormat,r.format,n,i),H=le(e.width,e.height,r.internalFormat,r.format,n,i)}()}function le(e,t,n,r,i,o){f.activeTexture(f.TEXTURE0);const u=f.createTexture();f.bindTexture(f.TEXTURE_2D,u),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MIN_FILTER,o),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MAG_FILTER,o),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_S,f.CLAMP_TO_EDGE),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_T,f.CLAMP_TO_EDGE),f.texImage2D(f.TEXTURE_2D,0,n,e,t,0,r,i,null);const a=f.createFramebuffer();f.bindFramebuffer(f.FRAMEBUFFER,a),f.framebufferTexture2D(f.FRAMEBUFFER,f.COLOR_ATTACHMENT0,f.TEXTURE_2D,u,0),f.viewport(0,0,e,t),f.clear(f.COLOR_BUFFER_BIT);return{texture:u,fbo:a,width:e,height:t,texelSizeX:1/e,texelSizeY:1/t,attach:e=>(f.activeTexture(f.TEXTURE0+e),f.bindTexture(f.TEXTURE_2D,u),e)}}function ve(e,t,n,r,i,o){let u=le(e,t,n,r,i,o),a=le(e,t,n,r,i,o);return{width:e,height:t,texelSizeX:u.texelSizeX,texelSizeY:u.texelSizeY,get read(){return u},set read(e){u=e},get write(){return a},set write(e){a=e},swap(){const e=u;u=a,a=e}}}function me(e,t,n,r,i,o,u){return e.width===t&&e.height===n||(e.read=function(e,t,n,r,i,o,u){const a=le(t,n,r,i,o,u);return k.bind(),f.uniform1i(k.uniforms.uTexture,e.attach(0)),B(a.fbo),a}(e.read,t,n,r,i,o,u),e.write=le(t,n,r,i,o,u),e.width=t,e.height=n,e.texelSizeX=1/t,e.texelSizeY=1/n),e}(function(){const e=[];t.SHADING&&e.push("SHADING"),t.BLOOM&&e.push("BLOOM"),t.SUNRAYS&&e.push("SUNRAYS"),ce.setKeywords(e)})(),fe(),t.IMMEDIATE&&Ee(t.SPLAT_COUNT),setTimeout((function e(){t.AUTO&&t.INTERVAL&&!t.PAUSED&&a.push(t.SPLAT_COUNT),setTimeout(e,t.INTERVAL)}),t.INTERVAL);let se=Date.now(),Te=0;function he(){if(r)return;const e=function(){const e=Date.now();let t=(e-se)/1e3;return t=Math.min(t,.016666),se=e,t}();de()&&fe(),function(){if(a.length>0||t.AUTO)return!0;if("hover"===t.TRIGGER){if(u.some((e=>e.moved)))return!0}else if("click"===t.TRIGGER&&u.some((e=>e.down||e.moved)))return!0;return M.read&&P.read&&(M.read,!0)}()?(function(e){Te+=e*t.COLOR_UPDATE_SPEED,Te>=1&&(Te=function(e,t,n){return(e-t)%(n-t)+t}(Te,0,1),u.forEach((e=>{e.color=pe()})))}(e),a.length>0&&Ee(a.pop()),u.forEach((e=>{e.moved&&(e.moved=!1,function(e){const n=e.deltaX*t.SPLAT_FORCE,r=e.deltaY*t.SPLAT_FORCE;Re(e.texcoordX,e.texcoordY,n,r,e.color)}(e))})),t.PAUSED||function(e){f.disable(f.BLEND),f.viewport(0,0,M.width,M.height),ie.bind(),f.uniform2f(ie.uniforms.texelSize,M.texelSizeX,M.texelSizeY),f.uniform1i(ie.uniforms.uVelocity,M.read.attach(0)),B(G.fbo),oe.bind(),f.uniform2f(oe.uniforms.texelSize,M.texelSizeX,M.texelSizeY),f.uniform1i(oe.uniforms.uVelocity,M.read.attach(0)),f.uniform1i(oe.uniforms.uCurl,G.attach(1)),f.uniform1f(oe.uniforms.curl,t.CURL),f.uniform1f(oe.uniforms.dt,e),B(M.write.fbo),M.swap(),re.bind(),f.uniform2f(re.uniforms.texelSize,M.texelSizeX,M.texelSizeY),f.uniform1i(re.uniforms.uVelocity,M.read.attach(0)),B(C.fbo),K.bind(),f.uniform1i(K.uniforms.uTexture,X.read.attach(0)),f.uniform1f(K.uniforms.value,t.PRESSURE),B(X.write.fbo),X.swap(),ue.bind(),f.uniform2f(ue.uniforms.texelSize,M.texelSizeX,M.texelSizeY),f.uniform1i(ue.uniforms.uDivergence,C.attach(0));for(let r=0;r<t.PRESSURE_ITERATIONS;r++)f.uniform1i(ue.uniforms.uPressure,X.read.attach(1)),B(X.write.fbo),X.swap();ae.bind(),f.uniform2f(ae.uniforms.texelSize,M.texelSizeX,M.texelSizeY),f.uniform1i(ae.uniforms.uPressure,X.read.attach(0)),f.uniform1i(ae.uniforms.uVelocity,M.read.attach(1)),B(M.write.fbo),M.swap(),ne.bind(),f.uniform2f(ne.uniforms.texelSize,M.texelSizeX,M.texelSizeY),l.supportLinearFiltering||f.uniform2f(ne.uniforms.dyeTexelSize,M.texelSizeX,M.texelSizeY);const n=M.read.attach(0);f.uniform1i(ne.uniforms.uVelocity,n),f.uniform1i(ne.uniforms.uSource,n),f.uniform1f(ne.uniforms.dt,e),f.uniform1f(ne.uniforms.dissipation,t.VELOCITY_DISSIPATION),B(M.write.fbo),M.swap(),f.viewport(0,0,P.width,P.height),l.supportLinearFiltering||f.uniform2f(ne.uniforms.dyeTexelSize,P.texelSizeX,P.texelSizeY),f.uniform1i(ne.uniforms.uVelocity,M.read.attach(0)),f.uniform1i(ne.uniforms.uSource,P.read.attach(1)),f.uniform1f(ne.uniforms.dissipation,t.DENSITY_DISSIPATION),B(P.write.fbo),P.swap()}(e),function(){t.BLOOM&&function(e,n){if(c.length<2)return;let r=n;f.disable(f.BLEND),j.bind();const i=t.BLOOM_THRESHOLD*t.BLOOM_SOFT_KNEE+1e-4,o=t.BLOOM_THRESHOLD-i,u=2*i,a=.25/i;f.uniform3f(j.uniforms.curve,o,u,a),f.uniform1f(j.uniforms.threshold,t.BLOOM_THRESHOLD),f.uniform1i(j.uniforms.uTexture,e.attach(0)),f.viewport(0,0,r.width,r.height),B(r.fbo),J.bind();for(let t=0;t<c.length;t++){const e=c[t];f.uniform2f(J.uniforms.texelSize,r.texelSizeX,r.texelSizeY),f.uniform1i(J.uniforms.uTexture,r.attach(0)),f.viewport(0,0,e.width,e.height),B(e.fbo),r=e}f.blendFunc(f.ONE,f.ONE),f.enable(f.BLEND);for(let t=c.length-2;t>=0;t--){const e=c[t];f.uniform2f(J.uniforms.texelSize,r.texelSizeX,r.texelSizeY),f.uniform1i(J.uniforms.uTexture,r.attach(0)),f.viewport(0,0,e.width,e.height),B(e.fbo),r=e}f.disable(f.BLEND),Q.bind(),f.uniform2f(Q.uniforms.texelSize,r.texelSizeX,r.texelSizeY),f.uniform1i(Q.uniforms.uTexture,r.attach(0)),f.uniform1f(Q.uniforms.intensity,t.BLOOM_INTENSITY),f.viewport(0,0,n.width,n.height),B(n.fbo)}(P.read,z),t.SUNRAYS&&(function(e,n,r){f.disable(f.BLEND),Z.bind(),f.uniform1i(Z.uniforms.uTexture,e.attach(0)),f.viewport(0,0,n.width,n.height),B(n.fbo),ee.bind(),f.uniform1f(ee.uniforms.weight,t.SUNRAYS_WEIGHT),f.uniform1i(ee.uniforms.uTexture,n.attach(0)),f.viewport(0,0,r.width,r.height),B(r.fbo)}(P.read,P.write,Y),function(e,t,n){W.bind();for(let r=0;r<n;r++)f.uniform2f(W.uniforms.texelSize,e.texelSizeX,0),f.uniform1i(W.uniforms.uTexture,e.attach(0)),B(t.fbo),f.uniform2f(W.uniforms.texelSize,0,e.texelSizeY),f.uniform1i(W.uniforms.uTexture,t.attach(0)),B(e.fbo)}(Y,H,1)),f.blendFunc(f.ONE,f.ONE_MINUS_SRC_ALPHA),f.enable(f.BLEND);const e=f.drawingBufferWidth,r=f.drawingBufferHeight;f.viewport(0,0,e,r);const i=null;t.TRANSPARENT||function(e,t){q.bind(),f.uniform4f(q.uniforms.color,t.r,t.g,t.b,1),B(e)}(i,function(e){return{r:e.r/255,g:e.g/255,b:e.b/255}}(t.BACK_COLOR)),t.TRANSPARENT&&function(e){$.bind(),f.uniform1f($.uniforms.aspectRatio,n.width/n.height),B(e)}(i),function(e,n,r){if(ce.bind(),t.SHADING&&f.uniform2f(ce.uniforms.texelSize,1/n,1/r),f.uniform1i(ce.uniforms.uTexture,P.read.attach(0)),t.BLOOM){f.uniform1i(ce.uniforms.uBloom,z.attach(1)),f.uniform1i(ce.uniforms.uDithering,V.attach(2));const e=function(e,t,n){return{x:t/e.width,y:n/e.height}}(V,n,r);f.uniform2f(ce.uniforms.ditherScale,e.x,e.y)}t.SUNRAYS&&f.uniform1i(ce.uniforms.uSunrays,Y.attach(3)),B(e)}(i,e,r)}(),i=requestAnimationFrame(he)):i=null}function de(){const e=Ae(n.clientWidth),t=Ae(n.clientHeight);return(n.width!==e||n.height!==t)&&(n.width=e,n.height=t,!0)}function Ee(e){for(let t=0;t<e;t++){const e=pe();e.r*=10,e.g*=10,e.b*=10;Re(Math.random(),Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),e)}}function Re(e,r,i,o,u){f.viewport(0,0,M.width,M.height),te.bind(),f.uniform1i(te.uniforms.uTarget,M.read.attach(0)),f.uniform1f(te.uniforms.aspectRatio,n.width/n.height),f.uniform2f(te.uniforms.point,e,r),f.uniform3f(te.uniforms.color,i,o,0),f.uniform1f(te.uniforms.radius,function(e){const t=n.width/n.height;return t>1&&(e*=t),e}(t.SPLAT_RADIUS/100)),B(M.write.fbo),M.swap(),f.viewport(0,0,P.width,P.height),f.uniform1i(te.uniforms.uTarget,P.read.attach(0)),f.uniform3f(te.uniforms.color,u.r,u.g,u.b),B(P.write.fbo),P.swap()}he();const xe=e=>{const t=Ae(e.offsetX),r=Ae(e.offsetY);let a=u.find((e=>-1===e.id));a||(a=new o),function(e,t,r,i){e.id=t,e.down=!0,e.moved=!1,e.texcoordX=r/n.width,e.texcoordY=1-i/n.height,e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.deltaX=0,e.deltaY=0,e.color=pe()}(a,-1,t,r),i||he()},ge=e=>{const r=Ae(e.offsetX),o=Ae(e.offsetY);(function(e,r,i){"click"===t.TRIGGER&&(e.moved=e.down),e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.texcoordX=r/n.width,e.texcoordY=1-i/n.height,e.deltaX=function(e){const t=n.width/n.height;return t<1&&(e*=t),e}(e.texcoordX-e.prevTexcoordX),e.deltaY=function(e){const t=n.width/n.height;return t>1&&(e/=t),e}(e.texcoordY-e.prevTexcoordY),"hover"===t.TRIGGER&&(e.moved=Math.abs(e.deltaX)>0||Math.abs(e.deltaY)>0)})(u[0],r,o),i||he()},Se=()=>{u[0].down=!1};function pe(){var e;if((null==(e=t.COLORS)?void 0:e.length)>0){const e=Math.floor(Math.random()*t.COLORS.length);return t.COLORS[e]}const n=function(e,t,n){let r,i,o;const u=Math.floor(6*e),a=6*e-u,c=n*(1-t),f=n*(1-a*t),l=n*(1-(1-a)*t);switch(u%6){case 0:r=n,i=l,o=c;break;case 1:r=f,i=n,o=c;break;case 2:r=c,i=n,o=l;break;case 3:r=c,i=f,o=n;break;case 4:r=l,i=c,o=n;break;case 5:r=n,i=c,o=f}return{r:r,g:i,b:o}}(Math.random(),1,1);return n.r*=.15,n.g*=.15,n.b*=.15,n}function De(e){let t=f.drawingBufferWidth/f.drawingBufferHeight;t<1&&(t=1/t);const n=Math.round(e),r=Math.round(e*t);return f.drawingBufferWidth>f.drawingBufferHeight?{width:r,height:n}:{width:n,height:r}}function Ae(e){const t=window.devicePixelRatio||1;return Math.floor(e*t)}function _e(e){if(0===e.length)return 0;let t=0;for(let n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return t}return"click"===t.TRIGGER?(n.addEventListener("mousedown",xe),n.addEventListener("mousemove",ge),window.addEventListener("mouseup",Se)):n.addEventListener("mousemove",ge),{start:function(){r||he()},destroy:function(){var e;r=!0,i&&(cancelAnimationFrame(i),i=null),"click"===t.TRIGGER?(n.removeEventListener("mousedown",xe),n.removeEventListener("mousemove",ge),window.removeEventListener("mouseup",Se)):n.removeEventListener("mousemove",ge),f&&(P&&(f.deleteTexture(P.read.texture),f.deleteTexture(P.write.texture)),M&&(f.deleteTexture(M.read.texture),f.deleteTexture(M.write.texture)),C&&f.deleteTexture(C.texture),G&&f.deleteTexture(G.texture),X&&(f.deleteTexture(X.read.texture),f.deleteTexture(X.write.texture)),c.forEach((e=>{f.deleteFramebuffer(e.fbo),f.deleteTexture(e.texture)})),f.deleteProgram(W.program),f.deleteProgram(k.program),f.deleteProgram(K.program),f.deleteProgram(q.program),null==(e=f.getExtension("WEBGL_lose_context"))||e.loseContext())},update:he}}(document.querySelector("canvas"),{AUTO:!1,IMMEDIATE:!1,SIM_RESOLUTION:128,DYE_RESOLUTION:512,CAPTURE_RESOLUTION:512,DENSITY_DISSIPATION:8,VELOCITY_DISSIPATION:0,PRESSURE_DISSIPATION:10,PRESSURE_ITERATIONS:20,CURL:0,SPLAT_RADIUS:.6,SHADING:!1,COLOR_UPDATE_SPEED:2e3,BLOOM:!1,BLOOM_ITERATIONS:6,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.1,BLOOM_THRESHOLD:0,BLOOM_SOFT_KNEE:.7,SUNRAYS:!1,SUNRAYS_RESOLUTION:196,SUNRAYS_WEIGHT:1,COLORS:[],BACK_COLOR:{r:0,g:0,b:0},TRANSPARENT:!0}).start();
